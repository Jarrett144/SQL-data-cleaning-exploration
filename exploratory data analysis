-- Exploratory Data Analysis --
use world_layoffs;

select *
from layoffs_staging2;

-- Top 3 layoffs in the world by company(at one time) --
select company, industry,location, max(total_laid_off)
from layoffs_staging2
group by company, industry,location
order by max(total_laid_off) desc
limit 3;

-- 100% company layoffs, funds raised desc so companies with no companies are not added on the top. --
select *
from layoffs_staging2
where percentage_laid_off = 1
order by funds_raised_millions desc;

-- Sum of company layoffs by layoffs desc --
select company, sum(total_laid_off)
from layoffs_staging2
group by company
order by 2 desc;

-- Date range for layoffs in the dataset -- 
select min(`date`),max(`date`)
from layoffs_staging2;

-- Sum of total layoffs by industry desc --
select industry, sum(total_laid_off)
from layoffs_staging2
group by industry
order by 2 desc;

-- Sum of total layoffs by country desc --
select country, sum(total_laid_off)
from layoffs_staging2
group by country
order by 2 desc;

-- Sum of total layoffs by year desc --
select year(`date`), sum(total_laid_off)
from layoffs_staging2
group by year(`date`)
order by 2 desc;

-- Sum of total layoffs by company stage desc --
select stage, sum(total_laid_off)
from layoffs_staging2
group by stage
order by 2 desc;

-- Sum of total layoffs by month asc --
select substring(`date`,1,7) as `month`, sum(total_laid_off)
from layoffs_staging2
where substring(`date`,1,7) is not null
group by 1 
order by 1 asc;

-- Rolling total of layoffs --
with rolling_total as
(select substring(`date`,1,7) as `month`, sum(total_laid_off) as total_off
from layoffs_staging2
where substring(`date`,1,7) is not null
group by 1 
order by 1 asc
)
select `month`,total_off, 
sum(total_off) over (order by `month`)
from rolling_total;

-- Company layoffs by year(layoffs desc) --
select company,year(`date`), sum(total_laid_off)
from layoffs_staging2
group by company, year(`date`)
order by 3 desc;

-- Ranking companies by layoffs desc per year asc max rank <=5 --
with company_year(company,years,total_laid_off) as
(select company,year(`date`), sum(total_laid_off)
from layoffs_staging2
group by company, year(`date`)
order by 3 desc
),
Company_year_rank as
(select *, dense_rank() over(partition by years order by total_laid_off desc) as ranking
from company_year
where years is not null
)
select *
from company_year_rank
where ranking <=5;
